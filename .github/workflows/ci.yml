name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1
        with:
          mongodb-version: '6.0'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/peer-eval-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/peer-eval-frontend:latest

  install-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies (frontend)
        run: |
          cd frontend
          npm ci

  test-frontend:
    runs-on: ubuntu-latest
    needs: install-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies (frontend)
        run: |
          cd frontend
          npm ci
      - name: Run tests (frontend)
        run: |
          cd frontend
          npx jest

  install-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies (backend)
        run: |
          cd backend
          npm ci

  monitoring:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Start monitoring stack (Prometheus & Grafana)
        run: |
          docker-compose -f monitoring/docker-compose.yml up -d
      - name: Wait for Prometheus and Grafana to be healthy
        run: |
          sleep 20  # Adjust as needed for your stack to be ready

  test-backend:
    runs-on: ubuntu-latest
    needs: [install-backend, monitoring]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1
        with:
          mongodb-version: '6.0'
      - name: Set test environment variables
        run: |
          echo "MONGO_URI=mongodb://localhost:27017/testdb" >> $GITHUB_ENV
          echo "PORT=4000" >> $GITHUB_ENV
      - name: Install dependencies (backend)
        run: |
          cd backend
          npm ci
      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Run tests (backend)
        run: |
          cd backend
          npx jest
      - name: Stop monitoring stack
        if: always()
        run: |
          docker-compose -f monitoring/docker-compose.yml down

  codacy-analysis:
    needs: [build-and-push, test-frontend, test-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  notify:
    needs: [build-and-push, codacy-analysis]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: 'C08VCBL65S4'  # Replace with your channel ID
          SLACK_MESSAGE: 'Build, tests, and Codacy scan passed successfully! ðŸŽ‰'